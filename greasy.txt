=== Content of: /Users/richardalvarez/Dev/gre-flashcards//next.config.mjs ===
/** @type {import('next').NextConfig} */
const nextConfig = {
    compiler: {
        styledComponents: true,
    }
};

export default nextConfig;

=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//next-env.d.ts ===
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.

=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//package.json ===
{
  "name": "gre-flashcards",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "next": "14.2.3",
    "react": "^18",
    "react-dom": "^18",
    "styled-components": "^6.1.11"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18",
    "eslint": "^8",
    "eslint-config-next": "14.2.3",
    "typescript": "^5"
  }
}

=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//.prettierrc ===
{
	"tabWidth": 4,
	"useTabs": true
}

=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//tsconfig.json ===
{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}

=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//.eslintrc.json ===
{
  "extends": "next/core-web-vitals"
}

=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//src/app/page.module.css ===
.main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  padding: 6rem;
  min-height: 100vh;
}

.description {
  display: inherit;
  justify-content: inherit;
  align-items: inherit;
  font-size: 0.85rem;
  max-width: var(--max-width);
  width: 100%;
  z-index: 2;
  font-family: var(--font-mono);
}

.description a {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

.description p {
  position: relative;
  margin: 0;
  padding: 1rem;
  background-color: rgba(var(--callout-rgb), 0.5);
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);
  border-radius: var(--border-radius);
}

.code {
  font-weight: 700;
  font-family: var(--font-mono);
}

.grid {
  display: grid;
  grid-template-columns: repeat(4, minmax(25%, auto));
  max-width: 100%;
  width: var(--max-width);
}

.card {
  padding: 1rem 1.2rem;
  border-radius: var(--border-radius);
  background: rgba(var(--card-rgb), 0);
  border: 1px solid rgba(var(--card-border-rgb), 0);
  transition: background 200ms, border 200ms;
}

.card span {
  display: inline-block;
  transition: transform 200ms;
}

.card h2 {
  font-weight: 600;
  margin-bottom: 0.7rem;
}

.card p {
  margin: 0;
  opacity: 0.6;
  font-size: 0.9rem;
  line-height: 1.5;
  max-width: 30ch;
  text-wrap: balance;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  padding: 4rem 0;
}

.center::before {
  background: var(--secondary-glow);
  border-radius: 50%;
  width: 480px;
  height: 360px;
  margin-left: -400px;
}

.center::after {
  background: var(--primary-glow);
  width: 240px;
  height: 180px;
  z-index: -1;
}

.center::before,
.center::after {
  content: "";
  left: 50%;
  position: absolute;
  filter: blur(45px);
  transform: translateZ(0);
}

.logo {
  position: relative;
}
/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);
  }

  .card:hover span {
    transform: translateX(4px);
  }
}

@media (prefers-reduced-motion) {
  .card:hover span {
    transform: none;
  }
}

/* Mobile */
@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
  }

  .card {
    padding: 1rem 2.5rem;
  }

  .card h2 {
    margin-bottom: 0.5rem;
  }

  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }

  .description {
    font-size: 0.8rem;
  }

  .description a {
    padding: 1rem;
  }

  .description p,
  .description div {
    display: flex;
    justify-content: center;
    position: fixed;
    width: 100%;
  }

  .description p {
    align-items: center;
    inset: 0 0 auto;
    padding: 2rem 1rem 1.4rem;
    border-radius: 0;
    border: none;
    border-bottom: 1px solid rgba(var(--callout-border-rgb), 0.25);
    background: linear-gradient(
      to bottom,
      rgba(var(--background-start-rgb), 1),
      rgba(var(--callout-rgb), 0.5)
    );
    background-clip: padding-box;
    backdrop-filter: blur(24px);
  }

  .description div {
    align-items: flex-end;
    pointer-events: none;
    inset: auto 0 0;
    padding: 2rem;
    height: 200px;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgb(var(--background-end-rgb)) 40%
    );
    z-index: 1;
  }
}

/* Tablet and Smaller Desktop */
@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
}

@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//src/app/layout.tsx ===
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import StyledComponentsRegistry from "@/lib/registry";

import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
	title: "Greasy",
	description: "Personalized GRE flashcards directly to your inbox.",
};

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	return (
		<html lang="en">
			<body className={inter.className}>
				<StyledComponentsRegistry>{children}</StyledComponentsRegistry>
			</body>
		</html>
	);
}

=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//src/app/page.tsx ===
import styles from "./page.module.css";
import SlideshowQuestionnaire from '../components/SlideshowQuestionnaire';
import ActivitiesForm from '../components/forms/ActivitiesForm';
import ContactForm from '../components/forms/ContactForm';
import FriendsForm from '../components/forms/FriendsForm';
import LocationForm from '../components/forms/ActivitiesForm';

const forms = [ContactForm, FriendsForm, LocationForm, ActivitiesForm];

export default function Home() {
	return (
		<div>
			<SlideshowQuestionnaire formComponents={forms} />
		</div>
	);
}

=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//src/app/globals.css ===
:root {
  --max-width: 1100px;
  --border-radius: 12px;
  --font-mono: ui-monospace, Menlo, Monaco, "Cascadia Mono", "Segoe UI Mono",
    "Roboto Mono", "Oxygen Mono", "Ubuntu Monospace", "Source Code Pro",
    "Fira Mono", "Droid Sans Mono", "Courier New", monospace;

  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;

  --primary-glow: conic-gradient(
    from 180deg at 50% 50%,
    #16abff33 0deg,
    #0885ff33 55deg,
    #54d6ff33 120deg,
    #0071ff33 160deg,
    transparent 360deg
  );
  --secondary-glow: radial-gradient(
    rgba(255, 255, 255, 1),
    rgba(255, 255, 255, 0)
  );

  --tile-start-rgb: 239, 245, 249;
  --tile-end-rgb: 228, 232, 233;
  --tile-border: conic-gradient(
    #00000080,
    #00000040,
    #00000030,
    #00000020,
    #00000010,
    #00000010,
    #00000080
  );

  --callout-rgb: 238, 240, 241;
  --callout-border-rgb: 172, 175, 176;
  --card-rgb: 180, 185, 188;
  --card-border-rgb: 131, 134, 135;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;

    --primary-glow: radial-gradient(rgba(1, 65, 255, 0.4), rgba(1, 65, 255, 0));
    --secondary-glow: linear-gradient(
      to bottom right,
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0.3)
    );

    --tile-start-rgb: 2, 13, 46;
    --tile-end-rgb: 2, 5, 19;
    --tile-border: conic-gradient(
      #ffffff80,
      #ffffff40,
      #ffffff30,
      #ffffff20,
      #ffffff10,
      #ffffff10,
      #ffffff80
    );

    --callout-rgb: 20, 20, 20;
    --callout-border-rgb: 108, 108, 108;
    --card-rgb: 100, 100, 100;
    --card-border-rgb: 200, 200, 200;
  }
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

a {
  color: inherit;
  text-decoration: none;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//src/components/forms/FriendsForm.tsx ===
// components/forms/FirstForm.js
'use client';

import React, { useState } from 'react';

function ContactForm({ onSubmit }: { onSubmit: (data: { answer: string }) => void }) {
    const [input, setInput] = useState('');

    const handleSubmit = (event: { preventDefault: () => void; }) => {
        event.preventDefault();
        onSubmit({ answer: input }); // Send data back to parent
    };

    return (
        <form onSubmit={handleSubmit}>
            <label>
                Friends
                <input type="text" value={input} onChange={(e) => setInput(e.target.value)} required />
            </label>
            <button type="submit">Submit</button>
        </form>
    );
}

export default ContactForm;
=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//src/components/forms/LocationsForm.tsx ===
// components/forms/FirstForm.js
'use client';

import React, { useState } from 'react';

function ContactForm({ onSubmit }: { onSubmit: (data: { answer: string }) => void }) {
    const [input, setInput] = useState('');

    const handleSubmit = (event: { preventDefault: () => void; }) => {
        event.preventDefault();
        onSubmit({ answer: input }); // Send data back to parent
    };

    return (
        <form onSubmit={handleSubmit}>
            <label>
                First Question:
                <input type="text" value={input} onChange={(e) => setInput(e.target.value)} required />
            </label>
            <button type="submit">Submit</button>
        </form>
    );
}

export default ContactForm;
=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//src/components/forms/ContactForm.tsx ===
// components/forms/FirstForm.js
'use client';

import styled from 'styled-components';
import React, { useState } from 'react';

const ContactContainer = styled.div`
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: space-evenly;
    gap: 2vmin;
    width: 50vw;

    form {
        display: flex;
        flex-direction: column;
        gap: 2vmin;

        div {
            display: flex;
            flex-direction: column;
            gap: 0.45vmin;
        }
    }    
}
`;

function ContactForm({ onSubmit }: { onSubmit: (data: { answer: string }) => void }) {
    const [input, setInput] = useState('');

    const handleSubmit = (event: { preventDefault: () => void; }) => {
        event.preventDefault();
        onSubmit({ answer: input }); // Send data back to parent
    };

    return (
        <ContactContainer>
            <h1>Contact Form</h1>
            <form onSubmit={handleSubmit}>
                <div>
                    <label>
                        Name
                    </label>
                    <input type="text" required />
                </div>
                <div>
                    <label>
                        Email
                    </label>
                    <input type="email" required />
                </div>
                <button type="submit">Submit</button>
            </form>
        </ContactContainer>
    );
}

export default ContactForm;
=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//src/components/forms/ActivitiesForm.tsx ===
// components/forms/FirstForm.js
'use client';

import React, { useState } from 'react';

function ContactForm({ onSubmit }: { onSubmit: (data: { answer: string }) => void }) {
    const [input, setInput] = useState('');

    const handleSubmit = (event: { preventDefault: () => void; }) => {
        event.preventDefault();
        onSubmit({ answer: input }); // Send data back to parent
    };

    return (
        <form onSubmit={handleSubmit}>
            <label>
                <input type="text" value={input} onChange={(e) => setInput(e.target.value)} required />
            </label>
            <button type="submit">Submit</button>
        </form>
    );
}

export default ContactForm;
=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//src/components/SlideshowQuestionnaire.tsx ===
// components/SlideshowQuestionnaire.js
'use client';

import React, { useState, useEffect, ReactElement } from 'react';
import styled, { keyframes } from 'styled-components';

const fadeIn = keyframes`
	from { opacity: 0; }
	to { opacity: 1; }
`;

const fadeOut = keyframes`
	from { opacity: 1; }
	to { opacity: 0; }
`;

interface QuestionContainerProps {
	fadeOut: boolean;
}

const QuestionContainer = styled.div<QuestionContainerProps>`
	animation: ${props => props.fadeOut ? fadeOut : fadeIn} 1s linear forwards;
`;

const FormContainer = styled.div`
	min-height: 300px;
	display: flex;
	flex: column;
	align-items: center;
	justify-content: space-evenly;
`;

function SlideshowQuestionnaire({ formComponents }: { formComponents: ReactElement[] }) {
	const [currentFormIndex, setCurrentFormIndex] = useState(0);
	const [formData, setFormData] = useState<any[]>([]);
	const [fadeOut, setFadeOut] = useState(false);

	useEffect(() => {
		setFadeOut(false); // Reset fade out effect
	}, [currentFormIndex]);

	const handleFormSubmit = async (data: any) => {
		// Save data from the submitted form
		const newFormData = [...formData];
		newFormData[currentFormIndex] = data;
		setFormData(newFormData);

		// Initiate fade out effect before changing the form
		setFadeOut(true);
		setTimeout(() => {
			if (currentFormIndex < formComponents.length - 1) {
				setCurrentFormIndex(currentFormIndex + 1);
			} else {
				console.log('All forms submitted:', newFormData); // Or do something with the data
			}
		}, 1000); // Match timeout to animation duration
	};

	const CurrentForm = formComponents[currentFormIndex] as unknown as React.ComponentType<any>;

	return (
		<QuestionContainer fadeOut={fadeOut}>
			<FormContainer>
				<CurrentForm onSubmit={handleFormSubmit} />
			</FormContainer>
		</QuestionContainer>
	);
}

export default SlideshowQuestionnaire;
=========================

=== Content of: /Users/richardalvarez/Dev/gre-flashcards//src/lib/registry.tsx ===
'use client'

import React, { useState } from 'react'
import { useServerInsertedHTML } from 'next/navigation'
import { ServerStyleSheet, StyleSheetManager } from 'styled-components'

export default function StyledComponentsRegistry({
    children,
}: {
    children: React.ReactNode
}) {
    // Only create stylesheet once with lazy initial state
    // x-ref: https://reactjs.org/docs/hooks-reference.html#lazy-initial-state
    const [styledComponentsStyleSheet] = useState(() => new ServerStyleSheet())

    useServerInsertedHTML(() => {
        const styles = styledComponentsStyleSheet.getStyleElement()
        styledComponentsStyleSheet.instance.clearTag()
        return <>{styles}</>
    })

    if (typeof window !== 'undefined') return <>{children}</>

    return (
        <StyleSheetManager sheet={styledComponentsStyleSheet.instance}>
            {children}
        </StyleSheetManager>
    )
}
=========================

